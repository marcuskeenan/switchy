@model FlowswitchApplication.Models.CalibrationRecord

@{
    ViewBag.Title = "Create";
}
@Html.Partial("NavBarPartial")
<h2>Create</h2>

@ViewBag.Name



 


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Html.DisplayFor(model => model.Flowswitch.ID) CalibrationRecord</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <!--
        <div class="form-group">
            
            @ViewBag.Name
            @ViewBag.ID 
            
            
        </div>
            -->
        
        <div class="form-group">
            <div class = "control-label col-md-2">Flow Switch</div>
            <div class="col-md-10">
                <h5>@ViewBag.Name</h5>  
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DatePickerFor(model => model.DateAdded, "autoclose=true", "todayBtn=true", "todayHighlight=true")
                @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TechnicianID, "TechnicianID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TechnicianID", null, "Select Technician", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TechnicianID, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.MaxInches, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxInches, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxInches, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxGallons, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxGallons, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxGallons, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TripInches, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TripInches, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TripInches, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TripGallons, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TripGallons, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TripGallons, "", new { @class = "text-danger" })
            </div>
        </div>
      
        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Note, new { @class = "form-control", @rows = 3 })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceRequestID, "ServiceRequestID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ServiceRequestID",null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceRequestID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success btn-md" />
            </div>
        </div>
    </div>
}

<div>
<br />
    
    @*@Html.ActionLink("Back to List", "Details", "Flowswitch", new { id = @ViewBag.ID }, new { @class = "btn btn-default btn-sm"})*@
    <input type="button" value="Back to Details" onclick="history.go(-1); return false;" class="btn btn-default btn-sm" />
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
